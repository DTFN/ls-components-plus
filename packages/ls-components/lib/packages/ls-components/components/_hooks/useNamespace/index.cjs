"use strict";var m=Object.defineProperty;var t=(n,a)=>m(n,"name",{value:a,configurable:!0});Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const N=require("../useGlobalConfig/index.cjs"),l="ls",V="is-",r=t((n,a,o,$,v)=>{let u=`${n}-${a}`;return o&&(u+=`-${o}`),$&&(u+=`__${$}`),v&&(u+=`--${v}`),u},"bemConfig"),p=t(n=>{const a=N.useGlobalConfig(l);return{namespace:a,b:t((s="")=>r(a.value,n,s,"",""),"b"),e:t(s=>s?r(a.value,n,"",s,""):"","e"),m:t(s=>s?r(a.value,n,"","",s):"","m"),be:t((s,e)=>s&&e?r(a.value,n,s,e,""):"","be"),em:t((s,e)=>s&&e?r(a.value,n,"",s,e):"","em"),bm:t((s,e)=>s&&e?r(a.value,n,s,"",e):"","bm"),bem:t((s,e,c)=>s&&e&&c?r(a.value,n,s,e,c):"","bem"),is:t((s,...e)=>{const c=e.length>=1?e[0]:!0;return s&&c?`${V}${s}`:""},"is"),cssVar:t(s=>{const e={};for(const c in s)s[c]&&(e[`--${a.value}-${c}`]=s[c]);return e},"cssVar"),cssVarName:t(s=>`--${a.value}-${s}`,"cssVarName"),cssVarBlock:t(s=>{const e={};for(const c in s)s[c]&&(e[`--${a.value}-${n}-${c}`]=s[c]);return e},"cssVarBlock"),cssVarBlockName:t(s=>`--${a.value}-${n}-${s}`,"cssVarBlockName")}},"useNamespace");exports.defNamespace=l;exports.useNamespace=p;
