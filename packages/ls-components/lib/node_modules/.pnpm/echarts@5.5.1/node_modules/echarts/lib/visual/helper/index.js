var l = Object.defineProperty;
var o = (e, s) => l(e, "name", { value: s, configurable: !0 });
function c(e, s, t) {
  switch (t) {
    case "color":
      var i = e.getItemVisual(s, "style");
      return i[e.getVisual("drawType")];
    case "opacity":
      return e.getItemVisual(s, "style").opacity;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      return e.getItemVisual(s, t);
    default:
      process.env.NODE_ENV !== "production" && console.warn("Unknown visual type " + t);
  }
}
o(c, "getItemVisualFromData");
function u(e, s) {
  switch (s) {
    case "color":
      var t = e.getVisual("style");
      return t[e.getVisual("drawType")];
    case "opacity":
      return e.getVisual("style").opacity;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      return e.getVisual(s);
    default:
      process.env.NODE_ENV !== "production" && console.warn("Unknown visual type " + s);
  }
}
o(u, "getVisualFromData");
export {
  c as getItemVisualFromData,
  u as getVisualFromData
};
