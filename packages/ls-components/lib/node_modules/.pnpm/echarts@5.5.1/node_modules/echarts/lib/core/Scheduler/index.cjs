"use strict";var R=Object.defineProperty;var p=(t,e)=>R(t,"name",{value:e,configurable:!0});Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const v=require("../../../../../../zrender@5.6.0/node_modules/zrender/lib/core/util/index.cjs"),S=require("../task/index.cjs"),I=require("../../util/component/index.cjs"),C=require("../../model/Global/index.cjs"),w=require("../ExtensionAPI/index.cjs"),A=require("../../util/model/index.cjs");var E=function(){function t(e,a,i,r){this._stageTaskMap=v.createHashMap(),this.ecInstance=e,this.api=a,i=this._dataProcessorHandlers=i.slice(),r=this._visualHandlers=r.slice(),this._allHandlers=i.concat(r)}return p(t,"Scheduler"),t.prototype.restoreData=function(e,a){e.restoreData(a),this._stageTaskMap.each(function(i){var r=i.overallTask;r&&r.dirty()})},t.prototype.getPerformArgs=function(e,a){if(e.__pipeline){var i=this._pipelineMap.get(e.__pipeline.id),r=i.context,s=!a&&i.progressiveEnabled&&(!r||r.progressiveRender)&&e.__idxInPipeline>i.blockIndex,n=s?i.step:null,u=r&&r.modDataCount,o=u!=null?Math.ceil(u/n):null;return{step:n,modBy:o,modDataCount:u}}},t.prototype.getPipeline=function(e){return this._pipelineMap.get(e)},t.prototype.updateStreamModes=function(e,a){var i=this._pipelineMap.get(e.uid),r=e.getData(),s=r.count(),n=i.progressiveEnabled&&a.incrementalPrepareRender&&s>=i.threshold,u=e.get("large")&&s>=e.get("largeThreshold"),o=e.get("progressiveChunkMode")==="mod"?s:null;e.pipelineContext=i.context={progressiveRender:n,modDataCount:o,large:u}},t.prototype.restorePipelines=function(e){var a=this,i=a._pipelineMap=v.createHashMap();e.eachSeries(function(r){var s=r.getProgressive(),n=r.uid;i.set(n,{id:n,head:null,tail:null,threshold:r.getProgressiveThreshold(),progressiveEnabled:s&&!(r.preventIncremental&&r.preventIncremental()),blockIndex:-1,step:Math.round(s||700),count:0}),a._pipe(r,r.dataTask)})},t.prototype.prepareStageTasks=function(){var e=this._stageTaskMap,a=this.api.getModel(),i=this.api;v.each(this._allHandlers,function(r){var s=e.get(r.uid)||e.set(r.uid,{}),n="";process.env.NODE_ENV!=="production"&&(n='"reset" and "overallReset" must not be both specified.'),v.assert(!(r.reset&&r.overallReset),n),r.reset&&this._createSeriesStageTask(r,s,a,i),r.overallReset&&this._createOverallStageTask(r,s,a,i)},this)},t.prototype.prepareView=function(e,a,i,r){var s=e.renderTask,n=s.context;n.model=a,n.ecModel=i,n.api=r,s.__block=!e.incrementalPrepareRender,this._pipe(a,s)},t.prototype.performDataProcessorTasks=function(e,a){this._performStageTasks(this._dataProcessorHandlers,e,a,{block:!0})},t.prototype.performVisualTasks=function(e,a,i){this._performStageTasks(this._visualHandlers,e,a,i)},t.prototype._performStageTasks=function(e,a,i,r){r=r||{};var s=!1,n=this;v.each(e,function(o,d){if(!(r.visualType&&r.visualType!==o.visualType)){var h=n._stageTaskMap.get(o.uid),f=h.seriesTaskMap,c=h.overallTask;if(c){var g,T=c.agentStubMap;T.each(function(l){u(r,l)&&(l.dirty(),g=!0)}),g&&c.dirty(),n.updatePayload(c,i);var y=n.getPerformArgs(c,r.block);T.each(function(l){l.perform(y)}),c.perform(y)&&(s=!0)}else f&&f.each(function(l,k){u(r,l)&&l.dirty();var b=n.getPerformArgs(l,r.block);b.skip=!o.performRawSeries&&a.isSeriesFiltered(l.context.model),n.updatePayload(l,i),l.perform(b)&&(s=!0)})}});function u(o,d){return o.setDirty&&(!o.dirtyMap||o.dirtyMap.get(d.__pipeline.id))}p(u,"needSetDirty"),this.unfinished=s||this.unfinished},t.prototype.performSeriesTasks=function(e){var a;e.eachSeries(function(i){a=i.dataTask.perform()||a}),this.unfinished=a||this.unfinished},t.prototype.plan=function(){this._pipelineMap.each(function(e){var a=e.tail;do{if(a.__block){e.blockIndex=a.__idxInPipeline;break}a=a.getUpstream()}while(a)})},t.prototype.updatePayload=function(e,a){a!=="remain"&&(e.context.payload=a)},t.prototype._createSeriesStageTask=function(e,a,i,r){var s=this,n=a.seriesTaskMap,u=a.seriesTaskMap=v.createHashMap(),o=e.seriesType,d=e.getTargetSeries;e.createOnAllSeries?i.eachRawSeries(h):o?i.eachRawSeriesByType(o,h):d&&d(i,r).each(h);function h(f){var c=f.uid,g=u.set(c,n&&n.get(c)||S.createTask({plan:x,reset:N,count:L}));g.context={model:f,ecModel:i,api:r,useClearVisual:e.isVisual&&!e.isLayout,plan:e.plan,reset:e.reset,scheduler:s},s._pipe(f,g)}p(h,"create")},t.prototype._createOverallStageTask=function(e,a,i,r){var s=this,n=a.overallTask=a.overallTask||S.createTask({reset:O});n.context={ecModel:i,api:r,overallReset:e.overallReset,scheduler:s};var u=n.agentStubMap,o=n.agentStubMap=v.createHashMap(),d=e.seriesType,h=e.getTargetSeries,f=!0,c=!1,g="";process.env.NODE_ENV!=="production"&&(g='"createOnAllSeries" is not supported for "overallReset", because it will block all streams.'),v.assert(!e.createOnAllSeries,g),d?i.eachRawSeriesByType(d,T):h?h(i,r).each(T):(f=!1,v.each(i.getSeries(),T));function T(y){var l=y.uid,k=o.set(l,u&&u.get(l)||(c=!0,S.createTask({reset:V,onDirty:B})));k.context={model:y,overallProgress:f},k.agent=n,k.__block=f,s._pipe(y,k)}p(T,"createStub"),c&&n.dirty()},t.prototype._pipe=function(e,a){var i=e.uid,r=this._pipelineMap.get(i);!r.head&&(r.head=a),r.tail&&r.tail.pipe(a),r.tail=a,a.__idxInPipeline=r.count++,a.__pipeline=r},t.wrapStageHandler=function(e,a){return v.isFunction(e)&&(e={overallReset:e,seriesType:U(e)}),e.uid=I.getUID("stageHandler"),a&&(e.visualType=a),e},t}();function O(t){t.overallReset(t.ecModel,t.api,t.payload)}p(O,"overallTaskReset");function V(t){return t.overallProgress&&q}p(V,"stubReset");function q(){this.agent.dirty(),this.getDownstream().dirty()}p(q,"stubProgress");function B(){this.agent&&this.agent.dirty()}p(B,"stubOnDirty");function x(t){return t.plan?t.plan(t.model,t.ecModel,t.api,t.payload):null}p(x,"seriesTaskPlan");function N(t){t.useClearVisual&&t.data.clearAllVisual();var e=t.resetDefines=A.normalizeToArray(t.reset(t.model,t.ecModel,t.api,t.payload));return e.length>1?v.map(e,function(a,i){return M(i)}):F}p(N,"seriesTaskReset");var F=M(0);function M(t){return function(e,a){var i=a.data,r=a.resetDefines[t];if(r&&r.dataEach)for(var s=e.start;s<e.end;s++)r.dataEach(i,s);else r&&r.progress&&r.progress(e,i)}}p(M,"makeSeriesTaskProgress");function L(t){return t.data.count()}p(L,"seriesTaskCount");function U(t){m=null;try{t(_,P)}catch{}return m}p(U,"detectSeriseType");var _={},P={},m;D(_,C.default);D(P,w.default);_.eachSeriesByType=_.eachRawSeriesByType=function(t){m=t};_.eachComponent=function(t){t.mainType==="series"&&t.subType&&(m=t.subType)};function D(t,e){for(var a in e.prototype)t[a]=v.noop}p(D,"mockMethods");exports.default=E;
