"use strict";var _=Object.defineProperty;var g=(e,u)=>_(e,"name",{value:u,configurable:!0});Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const t=require("vue"),M=require("../../../../checkbox/index/index.cjs"),S=require("../../config/index.cjs"),b=require("../../util/index.cjs"),A=require("../watcher-helper/index.cjs"),E=require("../render-helper/index.cjs"),N=require("../defaults/index.cjs"),B=require("../../../../../utils/types/index.cjs"),F=require("../../../../../../../../../@vue_shared@3.5.13/node_modules/@vue/shared/dist/shared.esm-bundler/index.cjs");let H=1;var $=t.defineComponent({name:"ElTableColumn",components:{ElCheckbox:M.ElCheckbox},props:N.default,setup(e,{slots:u}){const s=t.getCurrentInstance(),n=t.ref({}),o=t.computed(()=>{let l=s.parent;for(;l&&!l.tableId;)l=l.parent;return l}),{registerNormalWatchers:h,registerComplexWatchers:a}=A.default(o,e),{columnId:r,isSubColumn:m,realHeaderAlign:y,columnOrTableParent:p,setColumnWidth:x,setColumnForcedProps:I,setColumnRenders:P,getPropsData:w,getColumnElIndex:O,realAlign:q,updateColumnOrder:C}=E.default(e,u,o),i=p.value;r.value=`${i.tableId||i.columnId}_column_${H++}`,t.onBeforeMount(()=>{m.value=o.value!==i;const l=e.type||"default",c=e.sortable===""?!0:e.sortable,v=B.isUndefined(e.showOverflowTooltip)?i.props.showOverflowTooltip:e.showOverflowTooltip,f={...S.cellStarts[l],id:r.value,type:l,property:e.prop||e.property,align:q,headerAlign:y,showOverflowTooltip:v,filterable:e.filters||e.filterMethod,filteredValue:[],filterPlacement:"",filterClassName:"",isColumnGroup:!1,isSubColumn:!1,filterOpened:!1,sortable:c,index:e.index,rawColumnKey:s.vnode.key};let d=w(["columnKey","label","className","labelClassName","type","renderHeader","formatter","fixed","resizable"],["sortMethod","sortBy","sortOrders"],["selectable","reserveSelection"],["filterMethod","filters","filterMultiple","filterOpened","filteredValue","filterPlacement","filterClassName"]);d=b.mergeOptions(f,d),d=b.compose(P,x,I)(d),n.value=d,h(),a()}),t.onMounted(()=>{var l;const c=p.value,v=m.value?c.vnode.el.children:(l=c.refs.hiddenColumns)==null?void 0:l.children,f=g(()=>O(v||[],s.vnode.el),"getColumnIndex");n.value.getColumnIndex=f,f()>-1&&o.value.store.commit("insertColumn",n.value,m.value?c.columnConfig.value:null,C)}),t.onBeforeUnmount(()=>{n.value.getColumnIndex()>-1&&o.value.store.commit("removeColumn",n.value,m.value?i.columnConfig.value:null,C)}),s.columnId=r.value,s.columnConfig=n},render(){var e,u,s;try{const n=(u=(e=this.$slots).default)==null?void 0:u.call(e,{row:{},column:{},$index:-1}),o=[];if(Array.isArray(n))for(const a of n)((s=a.type)==null?void 0:s.name)==="ElTableColumn"||a.shapeFlag&2?o.push(a):a.type===t.Fragment&&Array.isArray(a.children)&&a.children.forEach(r=>{(r==null?void 0:r.patchFlag)!==1024&&!F.isString(r==null?void 0:r.children)&&o.push(r)});return t.h("div",o)}catch{return t.h("div",[])}}});exports.default=$;
