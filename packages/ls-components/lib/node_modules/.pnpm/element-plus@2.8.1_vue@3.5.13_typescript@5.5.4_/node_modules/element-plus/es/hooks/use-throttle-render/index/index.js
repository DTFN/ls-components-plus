var s = Object.defineProperty;
var o = (e, t) => s(e, "name", { value: t, configurable: !0 });
import { ref as i, onMounted as a, watch as c } from "vue";
const h = /* @__PURE__ */ o((e, t = 0) => {
  if (t === 0)
    return e;
  const r = i(!1);
  let u = null;
  const l = /* @__PURE__ */ o(() => {
    u && clearTimeout(u), u = setTimeout(() => {
      r.value = e.value;
    }, t);
  }, "dispatchThrottling");
  return a(l), c(() => e.value, (n) => {
    n ? l() : r.value = n;
  }), r;
}, "useThrottleRender");
export {
  h as useThrottleRender
};
