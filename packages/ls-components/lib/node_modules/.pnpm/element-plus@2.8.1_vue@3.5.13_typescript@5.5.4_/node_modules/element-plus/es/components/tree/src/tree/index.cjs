"use strict";var V=Object.defineProperty;var d=(e,a)=>V(e,"name",{value:a,configurable:!0});Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const n=require("vue"),j=require("../../../select/src/token/index.cjs"),L=require("../model/tree-store/index.cjs"),f=require("../model/util/index.cjs"),R=require("../tree-node/index.cjs"),U=require("../model/useNodeExpandEventBroadcast/index.cjs"),G=require("../model/useDragNode/index.cjs"),J=require("../model/useKeydown/index.cjs"),Q=require("../../../../_virtual/plugin-vue_export-helper/index.cjs"),W=require("../../../../utils/vue/icon/index.cjs"),X=require("../../../../hooks/use-locale/index/index.cjs"),Y=require("../../../../hooks/use-namespace/index/index.cjs"),Z=require("../../../form/src/constants/index.cjs"),_=n.defineComponent({name:"ElTree",components:{ElTreeNode:R.default},props:{data:{type:Array,default:d(()=>[],"default")},emptyText:{type:String},renderAfterExpand:{type:Boolean,default:!0},nodeKey:String,checkStrictly:Boolean,defaultExpandAll:Boolean,expandOnClickNode:{type:Boolean,default:!0},checkOnClickNode:Boolean,checkDescendants:{type:Boolean,default:!1},autoExpandParent:{type:Boolean,default:!0},defaultCheckedKeys:Array,defaultExpandedKeys:Array,currentNodeKey:[String,Number],renderContent:Function,showCheckbox:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},allowDrag:Function,allowDrop:Function,props:{type:Object,default:d(()=>({children:"children",label:"label",disabled:"disabled"}),"default")},lazy:{type:Boolean,default:!1},highlightCurrent:Boolean,load:Function,filterNodeMethod:Function,accordion:Boolean,indent:{type:Number,default:18},icon:{type:W.iconPropType}},emits:["check-change","current-change","node-click","node-contextmenu","node-collapse","node-expand","check","node-drag-start","node-drag-end","node-drop","node-drag-leave","node-drag-enter","node-drag-over"],setup(e,a){const{t:g}=X.useLocale(),C=Y.useNamespace("tree"),i=n.inject(j.selectKey,null),r=n.ref(new L.default({key:e.nodeKey,data:e.data,lazy:e.lazy,props:e.props,load:e.load,currentNodeKey:e.currentNodeKey,checkStrictly:e.checkStrictly,checkDescendants:e.checkDescendants,defaultCheckedKeys:e.defaultCheckedKeys,defaultExpandedKeys:e.defaultExpandedKeys,autoExpandParent:e.autoExpandParent,defaultExpandAll:e.defaultExpandAll,filterNodeMethod:e.filterNodeMethod}));r.value.initialize();const c=n.ref(r.value.root),l=n.ref(null),h=n.ref(null),N=n.ref(null),{broadcastExpanded:y}=U.useNodeExpandEventBroadcast(e),{dragState:k}=G.useDragNodeHandler({props:e,ctx:a,el$:h,dropIndicator$:N,store:r});J.useKeydown({el$:h},r);const p=n.computed(()=>{const{childNodes:t}=c.value,o=i?i.hasFilteredOptions!==0:!1;return(!t||t.length===0||t.every(({visible:s})=>!s))&&!o});n.watch(()=>e.currentNodeKey,t=>{r.value.setCurrentNodeKey(t)}),n.watch(()=>e.defaultCheckedKeys,t=>{r.value.setDefaultCheckedKey(t)}),n.watch(()=>e.defaultExpandedKeys,t=>{r.value.setDefaultExpandedKeys(t)}),n.watch(()=>e.data,t=>{r.value.setData(t)},{deep:!0}),n.watch(()=>e.checkStrictly,t=>{r.value.checkStrictly=t});const v=d(t=>{if(!e.filterNodeMethod)throw new Error("[Tree] filterNodeMethod is required when filter");r.value.filter(t)},"filter"),m=d(t=>f.getNodeKey(e.nodeKey,t.data),"getNodeKey$1"),E=d(t=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in getNodePath");const o=r.value.getNode(t);if(!o)return[];const s=[o.data];let u=o.parent;for(;u&&u!==c.value;)s.push(u.data),u=u.parent;return s.reverse()},"getNodePath"),w=d((t,o)=>r.value.getCheckedNodes(t,o),"getCheckedNodes"),B=d(t=>r.value.getCheckedKeys(t),"getCheckedKeys"),K=d(()=>{const t=r.value.getCurrentNode();return t?t.data:null},"getCurrentNode"),q=d(()=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in getCurrentKey");const t=K();return t?t[e.nodeKey]:null},"getCurrentKey"),S=d((t,o)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedNodes");r.value.setCheckedNodes(t,o)},"setCheckedNodes"),T=d((t,o)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedKeys");r.value.setCheckedKeys(t,o)},"setCheckedKeys"),b=d((t,o,s)=>{r.value.setChecked(t,o,s)},"setChecked"),D=d(()=>r.value.getHalfCheckedNodes(),"getHalfCheckedNodes"),$=d(()=>r.value.getHalfCheckedKeys(),"getHalfCheckedKeys"),x=d((t,o=!0)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentNode");f.handleCurrentChange(r,a.emit,()=>{y(t),r.value.setUserCurrentNode(t,o)})},"setCurrentNode"),A=d((t,o=!0)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentKey");f.handleCurrentChange(r,a.emit,()=>{y(),r.value.setCurrentNodeKey(t,o)})},"setCurrentKey"),z=d(t=>r.value.getNode(t),"getNode"),F=d(t=>{r.value.remove(t)},"remove"),M=d((t,o)=>{r.value.append(t,o)},"append"),P=d((t,o)=>{r.value.insertBefore(t,o)},"insertBefore"),H=d((t,o)=>{r.value.insertAfter(t,o)},"insertAfter"),I=d((t,o,s)=>{y(o),a.emit("node-expand",t,o,s)},"handleNodeExpand"),O=d((t,o)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in updateKeyChild");r.value.updateChildren(t,o)},"updateKeyChildren");return n.provide("RootTree",{ctx:a,props:e,store:r,root:c,currentNode:l,instance:n.getCurrentInstance()}),n.provide(Z.formItemContextKey,void 0),{ns:C,store:r,root:c,currentNode:l,dragState:k,el$:h,dropIndicator$:N,isEmpty:p,filter:v,getNodeKey:m,getNodePath:E,getCheckedNodes:w,getCheckedKeys:B,getCurrentNode:K,getCurrentKey:q,setCheckedNodes:S,setCheckedKeys:T,setChecked:b,getHalfCheckedNodes:D,getHalfCheckedKeys:$,setCurrentNode:x,setCurrentKey:A,t:g,getNode:z,remove:F,append:M,insertBefore:P,insertAfter:H,handleNodeExpand:I,updateKeyChildren:O}}});function ee(e,a,g,C,i,r){const c=n.resolveComponent("el-tree-node");return n.openBlock(),n.createElementBlock("div",{ref:"el$",class:n.normalizeClass([e.ns.b(),e.ns.is("dragging",!!e.dragState.draggingNode),e.ns.is("drop-not-allow",!e.dragState.allowDrop),e.ns.is("drop-inner",e.dragState.dropType==="inner"),{[e.ns.m("highlight-current")]:e.highlightCurrent}]),role:"tree"},[(n.openBlock(!0),n.createElementBlock(n.Fragment,null,n.renderList(e.root.childNodes,l=>(n.openBlock(),n.createBlock(c,{key:e.getNodeKey(l),node:l,props:e.props,accordion:e.accordion,"render-after-expand":e.renderAfterExpand,"show-checkbox":e.showCheckbox,"render-content":e.renderContent,onNodeExpand:e.handleNodeExpand},null,8,["node","props","accordion","render-after-expand","show-checkbox","render-content","onNodeExpand"]))),128)),e.isEmpty?(n.openBlock(),n.createElementBlock("div",{key:0,class:n.normalizeClass(e.ns.e("empty-block"))},[n.renderSlot(e.$slots,"empty",{},()=>{var l;return[n.createElementVNode("span",{class:n.normalizeClass(e.ns.e("empty-text"))},n.toDisplayString((l=e.emptyText)!=null?l:e.t("el.tree.emptyText")),3)]})],2)):n.createCommentVNode("v-if",!0),n.withDirectives(n.createElementVNode("div",{ref:"dropIndicator$",class:n.normalizeClass(e.ns.e("drop-indicator"))},null,2),[[n.vShow,e.dragState.showDropIndicator]])],2)}d(ee,"_sfc_render");var te=Q.default(_,[["render",ee],["__file","tree.vue"]]);exports.default=te;
