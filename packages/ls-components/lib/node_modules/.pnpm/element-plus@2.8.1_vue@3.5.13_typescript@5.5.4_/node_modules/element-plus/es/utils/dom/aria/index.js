var r = Object.defineProperty;
var c = (t, e) => r(t, "name", { value: e, configurable: !0 });
const d = /* @__PURE__ */ c(function(t, e, ...i) {
  let n;
  e.includes("mouse") || e.includes("click") ? n = "MouseEvents" : e.includes("key") ? n = "KeyboardEvent" : n = "HTMLEvents";
  const s = document.createEvent(n);
  return s.initEvent(e, ...i), t.dispatchEvent(s), t;
}, "triggerEvent"), u = /* @__PURE__ */ c((t) => !t.getAttribute("aria-owns"), "isLeaf"), f = /* @__PURE__ */ c((t, e, i) => {
  const { parentNode: n } = t;
  if (!n)
    return null;
  const s = n.querySelectorAll(i), o = Array.prototype.indexOf.call(s, t);
  return s[o + e] || null;
}, "getSibling"), v = /* @__PURE__ */ c((t) => {
  t && (t.focus(), !u(t) && t.click());
}, "focusNode");
export {
  v as focusNode,
  f as getSibling,
  u as isLeaf,
  d as triggerEvent
};
