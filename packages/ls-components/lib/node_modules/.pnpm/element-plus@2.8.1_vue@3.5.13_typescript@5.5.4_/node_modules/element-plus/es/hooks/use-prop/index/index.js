var u = Object.defineProperty;
var e = (o, r) => u(o, "name", { value: r, configurable: !0 });
import { getCurrentInstance as p, computed as l } from "vue";
const c = /* @__PURE__ */ e((o) => {
  const r = p();
  return l(() => {
    var n, t;
    return (t = (n = r == null ? void 0 : r.proxy) == null ? void 0 : n.$props) == null ? void 0 : t[o];
  });
}, "useProp");
export {
  c as useProp
};
