var a = Object.defineProperty;
var o = (e, d) => a(e, "name", { value: d, configurable: !0 });
import { inject as c, provide as i } from "vue";
function N(e) {
  const d = c("TreeNodeMap", null), n = {
    treeNodeExpand: /* @__PURE__ */ o((r) => {
      e.node !== r && e.node.collapse();
    }, "treeNodeExpand"),
    children: []
  };
  return d && d.children.push(n), i("TreeNodeMap", n), {
    broadcastExpanded: /* @__PURE__ */ o((r) => {
      if (e.accordion)
        for (const t of n.children)
          t.treeNodeExpand(r);
    }, "broadcastExpanded")
  };
}
o(N, "useNodeExpandEventBroadcast");
export {
  N as useNodeExpandEventBroadcast
};
