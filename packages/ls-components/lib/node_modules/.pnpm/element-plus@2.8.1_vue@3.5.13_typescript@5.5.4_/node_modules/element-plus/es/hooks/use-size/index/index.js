var t = Object.defineProperty;
var o = (e, r) => t(e, "name", { value: r, configurable: !0 });
import { inject as i, computed as n, unref as s } from "vue";
import { buildProp as m } from "../../../utils/vue/props/runtime/index.js";
import { componentSizes as p } from "../../../constants/size/index.js";
const f = m({
  type: String,
  values: p,
  required: !1
}), u = Symbol("size"), d = /* @__PURE__ */ o(() => {
  const e = i(u, {});
  return n(() => s(e.size) || "");
}, "useGlobalSize");
export {
  u as SIZE_INJECTION_KEY,
  d as useGlobalSize,
  f as useSizeProp
};
