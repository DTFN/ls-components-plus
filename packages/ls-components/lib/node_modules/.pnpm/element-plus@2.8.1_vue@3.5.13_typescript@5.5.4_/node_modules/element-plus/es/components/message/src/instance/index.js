var i = Object.defineProperty;
var r = (e, t) => i(e, "name", { value: t, configurable: !0 });
import { shallowReactive as d } from "vue";
const s = d([]), f = /* @__PURE__ */ r((e) => {
  const t = s.findIndex((c) => c.id === e), o = s[t];
  let n;
  return t > 0 && (n = s[t - 1]), { current: o, prev: n };
}, "getInstance"), p = /* @__PURE__ */ r((e) => {
  const { prev: t } = f(e);
  return t ? t.vm.exposed.bottom.value : 0;
}, "getLastOffset"), u = /* @__PURE__ */ r((e, t) => s.findIndex((n) => n.id === e) > 0 ? 16 : t, "getOffsetOrSpace");
export {
  f as getInstance,
  p as getLastOffset,
  u as getOffsetOrSpace,
  s as instances
};
