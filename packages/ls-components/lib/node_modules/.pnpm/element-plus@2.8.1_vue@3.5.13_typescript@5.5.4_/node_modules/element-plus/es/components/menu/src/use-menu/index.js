var l = Object.defineProperty;
var p = (n, t) => l(n, "name", { value: t, configurable: !0 });
import { computed as u } from "vue";
function d(n, t) {
  const a = u(() => {
    let e = n.parent;
    const r = [t.value];
    for (; e.type.name !== "ElMenu"; )
      e.props.index && r.unshift(e.props.index), e = e.parent;
    return r;
  });
  return {
    parentMenu: u(() => {
      let e = n.parent;
      for (; e && !["ElMenu", "ElSubMenu"].includes(e.type.name); )
        e = e.parent;
      return e;
    }),
    indexPath: a
  };
}
p(d, "useMenu");
export {
  d as default
};
