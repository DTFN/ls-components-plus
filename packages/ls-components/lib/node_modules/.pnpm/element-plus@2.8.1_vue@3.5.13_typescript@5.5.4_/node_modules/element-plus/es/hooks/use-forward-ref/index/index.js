var n = Object.defineProperty;
var r = (e, o) => n(e, "name", { value: o, configurable: !0 });
import { provide as u } from "vue";
const d = Symbol("elForwardRef"), a = /* @__PURE__ */ r((e) => {
  u(d, {
    setForwardRef: /* @__PURE__ */ r((t) => {
      e.value = t;
    }, "setForwardRef")
  });
}, "useForwardRef"), c = /* @__PURE__ */ r((e) => ({
  mounted(o) {
    e(o);
  },
  updated(o) {
    e(o);
  },
  unmounted() {
    e(null);
  }
}), "useForwardRefDirective");
export {
  d as FORWARD_REF_INJECTION_KEY,
  a as useForwardRef,
  c as useForwardRefDirective
};
