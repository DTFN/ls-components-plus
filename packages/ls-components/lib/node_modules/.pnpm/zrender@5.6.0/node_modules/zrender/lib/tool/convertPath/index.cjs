"use strict";var aa=Object.defineProperty;var D=(e,a)=>aa(e,"name",{value:a,configurable:!0});Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const z=require("../../core/curve/index.cjs"),ra=require("../../core/PathProxy/index.cjs");var L=ra.default.CMD;function O(e,a){return Math.abs(e-a)<1e-5}D(O,"aroundEqual");function A(e){var a=e.data,P=e.len(),b=[],f,v=0,u=0,h=0,t=0;function s(q,C){f&&f.length>2&&b.push(f),f=[q,C]}D(s,"createNewSubpath");function n(q,C,G,R){O(q,G)&&O(C,R)||f.push(q,C,G,R,G,R)}D(n,"addLine");function T(q,C,G,R,Y,Z){var l=Math.abs(C-q),H=Math.tan(l/4)*4/3,J=C<q?-1:1,K=Math.cos(q),U=Math.sin(q),V=Math.cos(C),W=Math.sin(C),y=K*Y+G,x=U*Z+R,$=V*Y+G,k=W*Z+R,F=Y*H*J,i=Z*H*J;f.push(y-F*U,x+i*K,$+F*W,k-i*V,$,k)}D(T,"addArc");for(var o,p,S,d,r=0;r<P;){var E=a[r++],N=r===1;switch(N&&(v=a[r],u=a[r+1],h=v,t=u,(E===L.L||E===L.C||E===L.Q)&&(f=[h,t])),E){case L.M:v=h=a[r++],u=t=a[r++],s(h,t);break;case L.L:o=a[r++],p=a[r++],n(v,u,o,p),v=o,u=p;break;case L.C:f.push(a[r++],a[r++],a[r++],a[r++],v=a[r++],u=a[r++]);break;case L.Q:o=a[r++],p=a[r++],S=a[r++],d=a[r++],f.push(v+2/3*(o-v),u+2/3*(p-u),S+2/3*(o-S),d+2/3*(p-d),S,d),v=S,u=d;break;case L.A:var Q=a[r++],X=a[r++],j=a[r++],B=a[r++],_=a[r++],I=a[r++]+_;r+=1;var M=!a[r++];o=Math.cos(_)*j+Q,p=Math.sin(_)*B+X,N?(h=o,t=p,s(h,t)):n(v,u,o,p),v=Math.cos(I)*j+Q,u=Math.sin(I)*B+X;for(var c=(M?-1:1)*Math.PI/2,m=_;M?m>I:m<I;m+=c){var g=M?Math.max(m+c,I):Math.min(m+c,I);T(m,g,Q,X,j,B)}break;case L.R:h=v=a[r++],t=u=a[r++],o=h+a[r++],p=t+a[r++],s(o,t),n(o,t,o,p),n(o,p,h,p),n(h,p,h,t),n(h,t,o,t);break;case L.Z:f&&n(v,u,h,t),v=h,u=t;break}}return f&&f.length>2&&b.push(f),b}D(A,"pathToBezierCurves");function w(e,a,P,b,f,v,u,h,t,s){if(O(e,P)&&O(a,b)&&O(f,u)&&O(v,h)){t.push(u,h);return}var n=2/s,T=n*n,o=u-e,p=h-a,S=Math.sqrt(o*o+p*p);o/=S,p/=S;var d=P-e,r=b-a,E=f-u,N=v-h,Q=d*d+r*r,X=E*E+N*N;if(Q<T&&X<T){t.push(u,h);return}var j=o*d+p*r,B=-o*E-p*N,_=Q-j*j,I=X-B*B;if(_<T&&j>=0&&I<T&&B>=0){t.push(u,h);return}var M=[],c=[];z.cubicSubdivide(e,P,f,u,.5,M),z.cubicSubdivide(a,b,v,h,.5,c),w(M[0],c[0],M[1],c[1],M[2],c[2],M[3],c[3],t,s),w(M[4],c[4],M[5],c[5],M[6],c[6],M[7],c[7],t,s)}D(w,"adpativeBezier");function va(e,a){var P=A(e),b=[];a=a||1;for(var f=0;f<P.length;f++){var v=P[f],u=[],h=v[0],t=v[1];u.push(h,t);for(var s=2;s<v.length;){var n=v[s++],T=v[s++],o=v[s++],p=v[s++],S=v[s++],d=v[s++];w(h,t,n,T,o,p,S,d,u,a),h=S,t=d}b.push(u)}return b}D(va,"pathToPolygons");exports.pathToBezierCurves=A;exports.pathToPolygons=va;
