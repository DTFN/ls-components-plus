var q = Object.defineProperty;
var P = (M, h) => q(M, "name", { value: h, configurable: !0 });
import { normalizeRadian as v } from "../util/index.js";
var i = Math.PI * 2;
function R(M, h, m, r, a, b, c, o, u) {
  if (c === 0)
    return !1;
  var p = c;
  o -= M, u -= h;
  var I = Math.sqrt(o * o + u * u);
  if (I - p > m || I + p < m)
    return !1;
  if (Math.abs(r - a) % i < 1e-4)
    return !0;
  if (b) {
    var k = r;
    r = v(a), a = v(k);
  } else
    r = v(r), a = v(a);
  r > a && (a += i);
  var f = Math.atan2(u, o);
  return f < 0 && (f += i), f >= r && f <= a || f + i >= r && f + i <= a;
}
P(R, "containStroke");
export {
  R as containStroke
};
