var g = Object.defineProperty;
var s = (v, e) => g(v, "name", { value: e, configurable: !0 });
import u from "../smoothBezier/index.js";
function z(v, e, a) {
  var t = e.smooth, o = e.points;
  if (o && o.length >= 2) {
    if (t) {
      var i = u(o, t, a, e.smoothConstraint);
      v.moveTo(o[0][0], o[0][1]);
      for (var m = o.length, r = 0; r < (a ? m : m - 1); r++) {
        var f = i[r * 2], n = i[r * 2 + 1], h = o[(r + 1) % m];
        v.bezierCurveTo(f[0], f[1], n[0], n[1], h[0], h[1]);
      }
    } else {
      v.moveTo(o[0][0], o[0][1]);
      for (var r = 1, T = o.length; r < T; r++)
        v.lineTo(o[r][0], o[r][1]);
    }
    a && v.closePath();
  }
}
s(z, "buildPath");
export {
  z as buildPath
};
