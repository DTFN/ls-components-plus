var t = Object.defineProperty;
var r = (n, e) => t(n, "name", { value: e, configurable: !0 });
import { isFunction as i, logError as o } from "../../core/util/index.js";
import u from "../../core/env/index.js";
function d(n) {
  return n.type === "linear";
}
r(d, "isLinearGradient");
function p(n) {
  return n.type === "radial";
}
r(p, "isRadialGradient");
(function() {
  return u.hasGlobalWindow && i(window.btoa) ? function(n) {
    return window.btoa(unescape(encodeURIComponent(n)));
  } : typeof Buffer < "u" ? function(n) {
    return Buffer.from(n).toString("base64");
  } : function(n) {
    return process.env.NODE_ENV !== "production" && o("Base64 isn't natively supported in the current environment."), null;
  };
})();
export {
  d as isLinearGradient,
  p as isRadialGradient
};
