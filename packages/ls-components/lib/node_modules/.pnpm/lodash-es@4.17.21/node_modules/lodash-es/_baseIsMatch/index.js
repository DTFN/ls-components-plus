var _ = Object.defineProperty;
var A = (r, f) => _(r, "name", { value: f, configurable: !0 });
import h from "../_Stack/index.js";
import p from "../_baseIsEqual/index.js";
var w = 1, I = 2;
function g(r, f, i, E) {
  var n = i.length, u = n;
  if (r == null)
    return !u;
  for (r = Object(r); n--; ) {
    var e = i[n];
    if (e[2] ? e[1] !== r[e[0]] : !(e[0] in r))
      return !1;
  }
  for (; ++n < u; ) {
    e = i[n];
    var l = e[0], s = r[l], R = e[1];
    if (e[2]) {
      if (s === void 0 && !(l in r))
        return !1;
    } else {
      var O = new h(), v;
      if (!(v === void 0 ? p(R, s, w | I, E, O) : v))
        return !1;
    }
  }
  return !0;
}
A(g, "baseIsMatch");
export {
  g as default
};
