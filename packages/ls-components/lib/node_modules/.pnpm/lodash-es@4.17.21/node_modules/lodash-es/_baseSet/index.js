var l = Object.defineProperty;
var d = (r, i) => l(r, "name", { value: i, configurable: !0 });
import x from "../_assignValue/index.js";
import _ from "../_castPath/index.js";
import a from "../_isIndex/index.js";
import e from "../isObject/index.js";
import g from "../_toKey/index.js";
function S(r, i, u, v) {
  if (!e(r))
    return r;
  i = _(i, r);
  for (var o = -1, m = i.length, p = m - 1, n = r; n != null && ++o < m; ) {
    var t = g(i[o]), f = u;
    if (t === "__proto__" || t === "constructor" || t === "prototype")
      return r;
    if (o != p) {
      var s = n[t];
      f = void 0, f === void 0 && (f = e(s) ? s : a(i[o + 1]) ? [] : {});
    }
    x(n, t, f), n = n[t];
  }
  return r;
}
d(S, "baseSet");
export {
  S as default
};
