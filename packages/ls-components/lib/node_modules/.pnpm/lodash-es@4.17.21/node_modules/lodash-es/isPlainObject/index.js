var n = Object.defineProperty;
var e = (t, r) => n(t, "name", { value: r, configurable: !0 });
import a from "../_baseGetTag/index.js";
import i from "../_getPrototype/index.js";
import f from "../isObjectLike/index.js";
var p = "[object Object]", u = Function.prototype, b = Object.prototype, c = u.toString, s = b.hasOwnProperty, j = c.call(Object);
function y(t) {
  if (!f(t) || a(t) != p)
    return !1;
  var r = i(t);
  if (r === null)
    return !0;
  var o = s.call(r, "constructor") && r.constructor;
  return typeof o == "function" && o instanceof o && c.call(o) == j;
}
e(y, "isPlainObject");
export {
  y as default
};
