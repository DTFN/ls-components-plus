var d = Object.defineProperty;
var e = (f, r) => d(f, "name", { value: r, configurable: !0 });
import g from "../_Stack/index.js";
import a from "../_assignMergeValue/index.js";
import M from "../_baseFor/index.js";
import v from "../_baseMergeDeep/index.js";
import x from "../isObject/index.js";
import D from "../keysIn/index.js";
import F from "../_safeGet/index.js";
function G(f, r, t, n, i) {
  f !== r && M(r, function(o, m) {
    if (i || (i = new g()), x(o))
      v(f, r, m, t, G, n, i);
    else {
      var p = n ? n(F(f, m), o, m + "", f, r, i) : void 0;
      p === void 0 && (p = o), a(f, m, p);
    }
  }, D);
}
e(G, "baseMerge");
export {
  G as default
};
