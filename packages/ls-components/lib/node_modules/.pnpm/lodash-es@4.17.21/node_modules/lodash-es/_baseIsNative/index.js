var e = Object.defineProperty;
var o = (r, t) => e(r, "name", { value: t, configurable: !0 });
import a from "../isFunction/index.js";
import n from "../_isMasked/index.js";
import p from "../isObject/index.js";
import i from "../_toSource/index.js";
var s = /[\\^$.*+?()[\]{}|]/g, c = /^\[object .+?Constructor\]$/, f = Function.prototype, m = Object.prototype, u = f.toString, g = m.hasOwnProperty, v = RegExp(
  "^" + u.call(g).replace(s, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function h(r) {
  if (!p(r) || n(r))
    return !1;
  var t = a(r) ? v : c;
  return t.test(i(r));
}
o(h, "baseIsNative");
export {
  h as default
};
